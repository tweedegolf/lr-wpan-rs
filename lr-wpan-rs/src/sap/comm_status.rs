use super::{Indication, IndicationValue, SecurityInfo, Status};
use crate::{DeviceAddress, wire::PanId};

/// The MLME-COMM-STATUS.indication primitive allows the MLME to indicate a communications status.
///
/// The MLME-COMM-STATUS.indication primitive is generated by the MLME and issued to its next higher
/// layer either following a transmission instigated through a response primitive or on receipt of a frame that
/// generates an error in its security processing, as described in 7.2.3. If the request to transmit was successful,
/// the status parameter shall be set to SUCCESS. Otherwise, the status parameter shall be set to indicate the
/// error with one of the following values:
/// - TRANSACTION_OVERFLOW – The MLME does not have the capacity to store the frame that was to be sent using indirect transmission.
/// - TRANSACTION_EXPIRED – The transaction was not handled within macTransactionPersistenceTime.
/// - CHANNEL_ACCESS_FAILURE – There was a failure in the CSMA-CA algorithm while attempting to send the frame.
/// - NO_ACK – An acknowledgment was expected but not received.
/// - INVALID_PARAMETER – One or more of the parameters in the response primitive were in error.
/// - A security error, as defined in 7.2.
#[derive(Debug, Clone, PartialEq, Eq)]
pub struct CommStatusIndication {
    /// The PAN identifier of the device from
    /// which the frame was received or to which
    /// the frame was being sent.
    pub pan_id: PanId,
    /// The individual device address of the
    /// entity from which the frame causing the
    /// error originated.
    pub source_address: DeviceAddress,
    /// The individual device address of the
    /// device for which the frame was intended.
    pub destination_address: DeviceAddress,
    pub status: Status,
    pub security_info: SecurityInfo,
}

impl From<IndicationValue> for CommStatusIndication {
    fn from(value: IndicationValue) -> Self {
        match value {
            IndicationValue::CommStatus(val) => val,
            _ => panic!("Bad cast"),
        }
    }
}

impl Indication for CommStatusIndication {
    type Response = ();
}
